#summary NAM4J first tutorial.

= Introduction =

No NAM4J binary release is currently available, but you can get the source code from svn.

Folder src/ contains the middleware, that includes 5 packages:
{{{
it.unipr.ce.dsg.nam4j.interfaces
it.unipr.ce.dsg.nam4j.impl
it.unipr.ce.dsg.nam4j.impl.context
it.unipr.ce.dsg.nam4j.impl.resource
it.unipr.ce.dsg.nam4j.impl.service
}}}

Folder examples/ contains demo code. Details are given below.


= demonam =
This folder contains the code that implements a NAM. There is a unique class

{{{
DemoNam extends NetworkedAutonomicMachine
}}}

The constructor instantiates three functional modules: 

{{{
cfm = new ChordFunctionalModule(this);
this.addFunctionalModule(cfm);
rfm = new ReasonerFunctionalModule(this);
this.addFunctionalModule(rfm);
sfm = new SensorFunctionalModule(this);
this.addFunctionalModule(sfm);
}}}

whose details are given in the following sections.
In the {{{main()}}} method, {{{DemoNam}}} randomly starts either a publication process (using its sensorfm) or a lookup process (using its reasonerfm).


= sensorfm =
This folder contains the code that implements a functional module that simulates a temperature sensor. There are two classes. The main one is

{{{
SensorFunctionalModule extends FunctionalModule
}}}

exposing the method {{{startPublishProcess()}}}, that once called detaches a thread that runs an instance of

{{{
ProvideTemperatureRunnable implements Runnable
}}}

Such a class implements the functional logic of the sensorfm. Its {{{run()}}} method looks for a {{{Publish}}} service within those exposed by the functional modules of the NAM. Then it creates a context event (instance of {{{TemperatureNotification}}}), turns it into a JSON message, and publish the latter using the {{{Publish}}} service.  


= reasonerfm =
This folder cntains the code that implements a functional module that acts as a reasoner.


= chordfm =
This folder contains the code that implements a functional module that provides Chord-based overlay functionalities. 


= ontology = 
This folder contains the code that implements the domain ontology of the demo.